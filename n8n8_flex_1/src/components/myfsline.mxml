<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009"
					xmlns:s="library://ns.adobe.com/flex/spark" xmlns:comp="components.*"
					xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" show="init()" hide="__distruct()">
	<fx:Declarations>
		
		<mx:SolidColorStroke id="line_ma5" color="#FFFFFF" weight="0.5"/>
		<mx:SolidColorStroke id="line_ma10" color="#FFFF00" weight="0.5"/>
		<mx:SolidColorStroke id="line_ma20" color="#FF00FF" weight="0.5"/>
		
		<mx:SolidColorStroke id="s1" color="#FF00FF" weight="2"/>
		<mx:SolidColorStroke id="s2" color="red" weight="2"/>
		<mx:SolidColorStroke id="s3" color="#00FF00" weight="2"/>
		
		<mx:DateFormatter id="DB" formatString="YYYYMMDD"/>
		<mx:DateFormatter id="DD" formatString="YYYY-MM-DD"/>
		<mx:DateFormatter id="DT" formatString="JJ:NN"/>
		
		<!-- X Y 坐标提示 -->
		<s:Label id="xTips" x="0" backgroundColor="red" color="white" paddingBottom="4"
				 paddingLeft="4" paddingRight="4" paddingTop="4" text="{ DT.format( new Date(xDate.Time ) ) }"/>
		<s:Label id="yTips" x="0" backgroundColor="red" color="white" paddingBottom="4" paddingLeft="4"
				 paddingRight="4" paddingTop="4" text="---"/>

		<!-- XY轴样式 -->
		<mx:SolidColorStroke id="xy" color="red" weight="1"/>
		
		<!-- 更多 -->
		<s:BorderContainer id="intro" width="300" height="201" verticalCenter="0" horizontalCenter="0">
			<s:layout>
				<s:VerticalLayout/>
			</s:layout>
			<s:Label color="white" fontSize="16" paddingLeft="5" text="尊敬的客户您好："/>
			<s:Label color="white" fontSize="13" paddingBottom="5" paddingLeft="36"
					 paddingTop="5" text="感谢您使用经传辅助决策体验版，如果您想获"/>
			<s:Label color="#FFFFFF" fontSize="13" paddingBottom="5" paddingTop="5"
					 text="得更多、更及时的辅助决策功能，请联系：" />
			<s:Label color="#FF0000" fontSize="14" paddingBottom="5" paddingLeft="36"
					 paddingTop="5" text="当地服务中心（详情可点击查询）" click="{ navigateToURL(new URLRequest('http://products.jingzhuan.cn/sjad1.html') ) }" useHandCursor="true"  buttonMode="true" mouseChildren="false"/>
			<s:Label  color="#FF0000" fontSize="14" paddingBottom="10"
					  paddingLeft="36" paddingTop="5" text="服务热线：4007003809"/>
			<s:Button label="关闭" click="{
					  this.removeElement( intro );
					  myViewStack.visible=false;
					  myViewStack.includeInLayout=false;}" />
		</s:BorderContainer>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.charts.ChartItem;
			import mx.charts.chartClasses.DateRangeUtilities;
			import mx.charts.chartClasses.IAxisRenderer;
			import mx.collections.ArrayList;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.events.ResizeEvent;
			import mx.graphics.IFill;
			import mx.graphics.SolidColor;
			import mx.rpc.events.ResultEvent;
			import mx.utils.ObjectProxy;
			
			import spark.core.NavigationUnit;
			import spark.core.SpriteVisualElement;
			import spark.events.IndexChangeEvent;
			
			
			[Bindable]
			private var _maipan:ArrayList;
			
			[Bindable]
			private var xDate:Object; //数据提示
			
			[Bindable]
			private var _myData:ArrayList;
			
			[Bindable]
			private var _normData:ArrayList;
			
			[Bindable]
			private var _normTips:Object; //指标数据提示
			
			[Bindable]
			private var _tran_info:ObjectProxy;//交易信息
			
			[Bindable]
			private var startDate:Date;
			[Bindable]
			private var endDate:Date;
			[Bindable]
			private var minDate:Date;
			[Bindable]
			private var maxDate:Date;
			
			private var _stockCode:int = 0;
			private var _Interval:Number = 0.05;
			private var g:SpriteVisualElement=new SpriteVisualElement();//画布，用于画十字准星
			private var _staObj:Stage;
			private var _timer:Timer;
			private var _lastTime:int = 0;
			private var _isAnotherStock:Boolean = false;
			private var _index:int = -1;
			private var _normLastTime:Number;
			
			public var lastClosePrice:Number;
			
			public function __distruct():void{
				_timer.stop();
				_timer.removeEventListener(TimerEvent.TIMER , arguments.callee );
				g.graphics.clear();
				this.removeElement(xTips);
				this.removeElement(yTips);
				this.removeEventListener(MouseEvent.MOUSE_MOVE , module1_mouseMoveHandler);
				this.removeEventListener(MouseEvent.MOUSE_OVER , module1_mouseMoveHandler);
				//buy_sell.__distruct();
				//tran_list.__distruct();

			}
			
			public function init():void{
				
				//缩放自适应
				myViewStack.height = this.height * 0.3 ;
				this.addEventListener(ResizeEvent.RESIZE , resize , false , 0 ,true);
				
				if( _stockCode !== this.parentApplication.stockCode)
					this._isAnotherStock = true;
				
				_stockCode = this.parentApplication.stockCode;
				var nowDate:String= DB.format(new Date());
				
				var byte:ByteArray = new ByteArray();
				
				byte.endian = Endian.LITTLE_ENDIAN;
				byte.writeUnsignedInt( 100 );
				byte.writeUnsignedInt( 1396982613 );
				byte.writeInt( 1703 );
				byte.writeUnsignedInt( 12 );
				byte.writeInt( 0 );
				byte.writeUnsignedInt( 0 );
				
				byte.writeUnsignedInt( 1 );
				byte.writeUnsignedInt( _stockCode );
				byte.writeInt(0);
				
				(new MySocket).send( byte , fsDataHandler );

				_staObj = this.systemManager.stage;
				g.graphics.lineStyle(1,0xFFFFFF);
				this.addElement(g);
				this.addElement(xTips);
				this.addElement(yTips);
				this.setFocus();
				
				if( this._index >= 0 )
					this.getNorm(true);
				
				//Timer 不能弱引用，否则空闲时会被系统当垃圾回收
				_timer = new Timer(6000,0);
				_timer.addEventListener(TimerEvent.TIMER , function():void{
					getFSData();
				});
				_timer.start();
			}
			
			private function getFSData():void{
				var byte:ByteArray = new ByteArray();
				
				byte.endian = Endian.LITTLE_ENDIAN;
				byte.writeUnsignedInt( 100 );
				byte.writeUnsignedInt( 1396982613 );
				byte.writeInt( 1024 );
				byte.writeUnsignedInt( 12 );
				byte.writeInt( 0 );
				byte.writeUnsignedInt( 0 );
				
				byte.writeUnsignedInt( 1 );
				byte.writeUnsignedInt( this._stockCode );
				byte.writeInt( this._lastTime );
				
				
				
				if( this._lastTime > 0  )
				{
					(new MySocket).send( byte , fsSocketHandler );
				}
				else
				{
					(new MySocket).send( byte , fsDataHandler );
				}

			}
			
			private function fsDataHandler( result:ByteArray ):void{
				update_info();

				result.position += 4;
				var code:int = result.readUnsignedInt();
				var count:int = result.readInt();
				this.lastClosePrice = result.readFloat();
				var arr:Array = (Decompress.getInstance()).getFSline( code , count , result) ;
				
				_myData = new ArrayList(arr);
				
				//取倒数第二个时间
				if( count > 1 )
					this._lastTime = arr[count-2]['Time'] / 1000 ;
				else
					this._lastTime = 0 ;
					
				var now:Date = new Date( arr[0]['Time'] );
				var year:Number = now.fullYear;
				var month:Number = now.month;
				var day:Number = now.date;
				
				this.startDate = new Date( year , month , day , 11 , 30 );
				this.endDate = new Date( year , month , day , 13, 0 );
				this.minDate = new Date( year , month , day , 9, 30 );
				this.maxDate = new Date( year , month , day , 15, 0 );
				
				this._Interval = Math.round(Math.max( Math.abs( arr[0]['max'] - lastClosePrice ) , Math.abs( lastClosePrice - arr[0]['min'] ) )*100)/100;
				this._Interval = this._Interval < 0.05 ? 0.05 : this._Interval*1.01 ;
				main_y.maximum = (lastClosePrice + this._Interval );
				main_y.minimum = (lastClosePrice - this._Interval );
				main_y.interval = this._Interval /5;
				
				var max_percent:Number = (this._Interval / lastClosePrice)*100;
				main_y2.maximum = max_percent;
				main_y2.minimum = -max_percent;
				main_y2.interval = max_percent/5;


			}
			
			private function fsSocketHandler( result:ByteArray ):void{
				
				result.position += 4;
				var code:int = result.readUnsignedInt();
				var count:int = result.readInt();
				if( count < 2)
					return;
				var arr:Array = (Decompress.getInstance()).getFSline( code , count , result);
				var len:uint = _myData.length-1;

				var getTime:Date = new Date( arr[1]['Time'] );
				var obj:Object = _myData.getItemAt(len);
				var sendTime:Date = new Date( obj['Time'] );
				
				var i:int;
				
				//修正平均价
				for( i=1 ; i<count ; ++i )
				{
					arr[i]['AvgPrice'] = (obj['AvgPrice']*(len+i-1) +arr[i]['Price'])/(len+i);
				}
				
				if( getTime.minutes === sendTime.minutes && getTime.hours === sendTime.hours )
				{
					_myData.setItemAt( arr[1] , len );
					for( i = 2 ; i<count ; ++i )
					{
						_myData.addItem( arr[i] );
					}
				}
				else
				{
					for( i = 1 ; i<count ; ++i )
					{
						_myData.addItem( arr[i] );
					}
				}
				
				this._lastTime = arr[count-2]['Time'] / 1000 ;
				
				var max:Number = Math.round(Math.max( Math.abs( arr[0]['max'] - lastClosePrice ) , Math.abs( lastClosePrice - arr[0]['min'] ) )*100)/100;

				
				//坐标值没发生变化则避免重绘
				if( this._Interval < max  )
				{
					this._Interval = max;
					
					main_y.maximum = (lastClosePrice + max );
					main_y.minimum = (lastClosePrice - max );
					main_y.interval = max /5;
					
					var max_percent:Number = (max / lastClosePrice)*100;
					main_y2.maximum = max_percent;
					main_y2.minimum = -max_percent;
					main_y2.interval = max_percent/5;
				}
				
				if(this._index >= 0 )
				{
					this.getNorm();
				}
				
				
				update_info();

			}
			
			private  function resize( event:ResizeEvent ):void{
				myViewStack.height = this.height * 0.3 ;
			}
	
			private function module1_mouseMoveHandler(event:MouseEvent):void
			{
				
				g.graphics.clear();
				g.graphics.lineStyle(1,0xFFFFFF);
				g.graphics.moveTo(52 , mouseY-1);
				g.graphics.lineTo(linechart.width-50 , mouseY-1);
				g.graphics.moveTo(mouseX , 0);
				g.graphics.lineTo(mouseX , _staObj.height-68);


				this.main_line.findDataPoints(mouseX - 48 , mouseY-1 , 5);
//				test.text = main_line.currIndex + " | " + _myData.length ;
				
				//超出K线范围不显示价格
				if( linechart.height > main_line.mouseY ){
					var p:Point = new Point(mouseX,mouseY-25);
					var d:Array = main_line.localToData(p);	//d[0]是 x轴坐标，即是日期，d[1]为y轴，即是价格
					yTips.y = mouseY;
					yTips.text = d[1].toFixed(2);
					yTips.visible = true ;
				}else{
					yTips.visible = false ;
				}
				
				xTips.y = linechart.height;
				xTips.x = mouseX;
				xTips.visible = true ;
				//xTips.text = main_line.currIndex + "" ;
				
				
				var index:int = main_line.currIndex;
				
				xDate = _myData.getItemAt( index );
				_normTips = this._normData.getItemAt(index);
			}

			
			private function moneyformat(val:Object, previousValue:Object, axis:LinearAxis):String {//量图Y轴格式化
				var str:String = val.toString();
				var value:int = val.valueOf();
				if( Math.abs(value) > 100000000 )
					str = (int(str)/100000000) + '亿';
				else if( Math.abs(value) > 10000 )
					str = (int(str)/10000) + '万';
				
				return str;
			}
			
			private function moneyformat2(val:Object, previousValue:Object, axis:LinearAxis):String {//至尊数据格式化
				var value:Number = val.valueOf();
				return Math.abs(value) > 10000 ? (value/10000) + '亿' : val.toString() + '万' ;
			}

/*
			//指标切换
			private function changeHandler(event:IndexChangeEvent):void
			{
				if( this._normData == null || this._isAnotherStock )
				{
					this.getNorm(true);
					this._isAnotherStock = false;
				}
				myViewStack.visible = true ;
				myViewStack.includeInLayout = true ;
				switch(event.target.selectedItem)
				{
					case 'KDJ':
						_index = myViewStack.selectedIndex = 0 ;
						break;
					case 'MACD':
						_index = myViewStack.selectedIndex = 1 ;
						break;
					case 'RSI':
						_index = myViewStack.selectedIndex = 2 ;
						break;
					case '量比' :
						_index = myViewStack.selectedIndex = 3 ;
						break;
					case '至尊数据' :
						_index = myViewStack.selectedIndex = 4 ;
						break;
					case '更多':
						this.addElement( intro );
						break;
					default :
						_index = -1;
						myViewStack.visible=false;
						myViewStack.includeInLayout=false;
				}
			}
	
*/
			private var _last_button:Object=null;
			private function changeHandler(event:Event, index:int):void
			{
				

				if( this._normData == null || this._isAnotherStock )
				{
					this.getNorm(true);
					this._isAnotherStock = false;
				}
				myViewStack.visible = true ;
				myViewStack.includeInLayout = true ;
				
				if( _last_button !== null )
				{
					_last_button.styleName="button";
				}
				
				if(index > 4)
				{
					this.addElement( intro );
					return;
				}
				
				if(index === _index)
				{
					_index = -1;
					myViewStack.visible=false;
					myViewStack.includeInLayout=false;
					event.target.styleName="button";
					_last_button = null;
					return;
				}

				event.target.styleName="button_down";
				_last_button = event.target;
				_index = myViewStack.selectedIndex = index;
			}
			

			private  function getNorm(all:Boolean = false):void{
				
				var byte:ByteArray = new ByteArray();
				
				byte.endian = Endian.LITTLE_ENDIAN;
				byte.writeUnsignedInt( 100 );
				byte.writeUnsignedInt( 1396982613 );
				byte.writeInt( 1704 );
				
				if(  this.parentApplication.parameters[this._stockCode] )
				{
					byte.writeUnsignedInt( 40 );
					byte.writeInt( 0 );
					byte.writeUnsignedInt( 0 );
					
					byte.writeInt( 7 );
					
					byte.writeInt( 2 );
					byte.writeInt( 3 );
					byte.writeInt( 4 );
					byte.writeInt( 5 );
					byte.writeInt( 6 );
					byte.writeInt( 7 );
					byte.writeInt( 9 );
					
					byte.writeInt( _stockCode );
					
				}
				else
				{
					byte.writeUnsignedInt( 28 );
					byte.writeInt( 0 );
					byte.writeUnsignedInt( 0 );
					
					byte.writeInt( 4 );

					byte.writeInt( 5 );
					byte.writeInt( 6 );
					byte.writeInt( 7 );
					byte.writeInt( 9 );
					
					byte.writeInt( _stockCode );

				}
				
				//var date:Date = new Date( this._normLastTime*1000 );
				//Alert.show('发送给服务器的时间: ' + date.hours + ':' + date.minutes  );
				//Alert.show('this._normLastTime' + this._normLastTime);

				if( all )
				{
					byte.writeInt( 0 );
					(new MySocket).send( byte , normDataHandler );
				}
				else
				{
					byte.writeInt( this._normLastTime );
					(new MySocket).send( byte , normSocketHandler );
				}
				

			}
			
			private function normDataHandler(result:ByteArray):void{
				//Alert.show(result.bytesAvailable+'');
				var count:uint = result.readUnsignedInt();
				var temp:Array = [];

				if( this.parentApplication.parameters[this._stockCode] )
				{
					for(var i:int = 0 ; i < count ; ++i )
					{
						temp.push({
							'Time' : result.readInt()*1000,
							'ZLTJ' : result.readFloat()/10000,
							'GFTJ' : result.readFloat()/10000,
							'SHTJ' : result.readFloat()/10000,
							'DEA' : result.readFloat(),
							'DIFF' : result.readFloat(),
							'MACD' : result.readFloat(),
							'RSI1' : result.readFloat(),
							'RSI2' : result.readFloat(),
							'RSI3' : result.readFloat(),
							'K' : result.readFloat(),
							'D' : result.readFloat(),
							'J' : result.readFloat(),
							'LB' : result.readFloat()
						});
					}
				}
				else
				{
					for(i = 0 ; i < count ; ++i )
					{
						temp.push({
							'Time' : result.readInt()*1000,
							'ZLTJ' : NaN,
							'GFTJ' : NaN,
							'SHTJ' : NaN,
							'DEA' : result.readFloat(),
							'DIFF' : result.readFloat(),
							'MACD' : result.readFloat(),
							'RSI1' : result.readFloat(),
							'RSI2' : result.readFloat(),
							'RSI3' : result.readFloat(),
							'K' : result.readFloat(),
							'D' : result.readFloat(),
							'J' : result.readFloat(),
							'LB' : result.readFloat()
						});
					}
				}
				
//				var date:Date = new Date(temp[count-1]['Time']);
//				Alert.show('第一次赋值: ' + date.hours + ':' + date.minutes  );
				this._normLastTime = temp[count-1]['Time'] / 1000 ;
				

				this._normData = new ArrayList(temp);

			}
			
			private function normSocketHandler( result:ByteArray ):void{
				
				var count:uint = result.readUnsignedInt();
				
//				Alert.show('count: ' + count);
//				Alert.show('count:' + count + ' | time:' + this._normLastTime);
				if( count < 2 )
					return;
				var temp:Array = [];

				
				if( this.parentApplication.parameters[this._stockCode] )
				{
					for(var i:int = 0 ; i < count ; ++i )
					{
						temp.push({
							'Time' : result.readInt()*1000,
							'ZLTJ' : result.readFloat()/10000,
							'GFTJ' : result.readFloat()/10000,
							'SHTJ' : result.readFloat()/10000,
							'DEA' : result.readFloat(),
							'DIFF' : result.readFloat(),
							'MACD' : result.readFloat(),
							'RSI1' : result.readFloat(),
							'RSI2' : result.readFloat(),
							'RSI3' : result.readFloat(),
							'K' : result.readFloat(),
							'D' : result.readFloat(),
							'J' : result.readFloat(),
							'LB' : result.readFloat()
						});
					}
				}
				else
				{
					for(i = 0 ; i < count ; ++i )
					{
						temp.push({
							'Time' : result.readInt()*1000,
							'ZLTJ' : NaN,
							'GFTJ' : NaN,
							'SHTJ' : NaN,
							'DEA' : result.readFloat(),
							'DIFF' : result.readFloat(),
							'MACD' : result.readFloat(),
							'RSI1' : result.readFloat(),
							'RSI2' : result.readFloat(),
							'RSI3' : result.readFloat(),
							'K' : result.readFloat(),
							'D' : result.readFloat(),
							'J' : result.readFloat(),
							'LB' : result.readFloat()
						});
					}
				}
				

				this._normLastTime = temp[count-1]['Time'] / 1000 ;
				for( i = 1 ; i < count ; ++i )
				{
					this._normData.addItem( temp[i] );
				}
				
			}
			
			//填充Macd图
			private function fillfunction(item:ChartItem, index:Number):IFill {
				if(  item.item.MACD > 0)
					return(new SolidColor(0xff0000, 1));
				else
					return(new SolidColor(0x008000, 1));
			}
			
			private function candlestickchart_mouseOutHandler(event:MouseEvent):void
			{
				g.graphics.clear();
				xTips.visible = false ;
				yTips.visible = false ;
			}
			
			private function toggle(arr:Array):void
			{
				for each( var k:Object in arr )
				{
					k.visible = k.includeInLayout = ! k.visible;
				}
			}
			
			private function check_ZZSJ(event:FlexEvent):void
			{
				if( this.parentApplication.parameters.username == null || this.parentApplication.parameters.username.length < 1 )
				{
					ZLTJ_tips.text = GFTJ_tips.text = SHTJ_tips.text = '尊敬的用户，您还没有登录，无法查看【至尊数据】，请登陆后刷新重试！';
				}
				else if( this.parentApplication.parameters[this._stockCode] !== true )
				{
					ZLTJ_tips.text = GFTJ_tips.text = SHTJ_tips.text = '您还没设置该股为您的专属个股, 无法查看【至尊数据】，请设置后刷新重试';
				}
				else
				{
					ZLTJ_tips.text = GFTJ_tips.text = SHTJ_tips.text = '';
				}
			}
			
			private function update_info():void
			{
				var byte:ByteArray = new ByteArray();
				
				byte.endian = Endian.LITTLE_ENDIAN;
				byte.writeUnsignedInt( 100 );
				byte.writeUnsignedInt( 1396982613 );
				byte.writeInt( 1710 );
				byte.writeUnsignedInt( 8 );
				byte.writeInt( 0 );
				byte.writeUnsignedInt( 0 );
				
				byte.writeUnsignedInt( 1 );
				byte.writeInt( this._stockCode );
				
				(new MySocket).send( byte , tranInfoHandler );
			}
			
			private function tranInfoHandler( result:ByteArray ):void{
				
				result.position += 8;
				
				var temp:Object = new Object;
				var showCode:String;
				if ( this._stockCode > 1000000)
				{
					showCode = this._stockCode.toString().substr(1);
				}
				else if( this._stockCode.toString().length === 1 )
				{
					showCode = '00000' + this._stockCode;
				}
				else
				{
					showCode =this._stockCode.toString();
				}
				temp.stockName = showCode  + '  ' + result.readMultiByte( 12 , "cn-gb") ;
				temp.time = result.readInt();
				temp.lastClosePrice = result.readFloat().toFixed(2);
				temp.todayOpen =  result.readFloat();
				temp.highest = result.readFloat();
				temp.lowest = result.readFloat();
				temp.nowPrice = result.readFloat();
				temp.vol = result.readFloat();
				temp.amount = result.readFloat();
				temp.upDown = temp.nowPrice - temp.lastClosePrice;
				temp.upDownPercent = temp.upDown*100 / temp.lastClosePrice;
				
				var buySum:Number=0;
				var sellSum:Number=0;
				
				result.position += 60;
				for(var i:int = 1 ; i<6 ; ++i)
				{
					result.position -= 60;
					temp["sell"+i] = result.readFloat();
					temp["sell"+i] = temp["sell"+i] == 0 ? '——' : temp["sell"+i] ;
					result.position += 16;
					sellSum += temp["sellVol"+i] = Math.round(result.readFloat());
					result.position += 16;
					temp["buy"+i] = result.readFloat();
					temp["buy"+i] = temp["buy"+i] == 0 ? '——' : temp["buy"+i] ;
					result.position += 16;
					buySum += temp["buyVol"+i] = Math.round(result.readFloat());
				}
				result.position += 12;
				temp.avgVol5 = result.readFloat();
				result.position += 4;
				temp.wc = buySum - sellSum ;
				temp.wb = 100 * temp.wc / (buySum + sellSum);
				temp.wp = result.readFloat();
				temp.np = temp.vol - temp.wp;
				temp.nowVol =  result.readFloat();
				
				var date:Date = new Date( temp.time * 1000 );
				var start:Date = new Date(date.fullYear , date.month , date.date , 9 , 30);
				var diff:int;
				if( date.hours > 11 )
					diff = (date.time - start.time - 5400000) / 60000;
				else
					diff = (date.time - start.time) / 60000;
				
				temp.lb = temp.vol*240 / (temp.avgVol5*diff);
				
				_tran_info = new ObjectProxy( temp );
				
				getDealData();
			}
			
			private function getDealData():void{
				var byte:ByteArray = new ByteArray;
				byte.endian = Endian.LITTLE_ENDIAN;
				byte.writeUnsignedInt( 100 );
				byte.writeUnsignedInt( 1396982613 );
				byte.writeInt( 1707 );
				byte.writeUnsignedInt( 8 );
				byte.writeInt( 0 );
				byte.writeUnsignedInt( 0 );
				
				byte.writeUnsignedInt( 1 );
				byte.writeInt( this._stockCode );
				byte.writeInt(0);
				
				(new MySocket).send( byte , dealDataHandler );
			}
			
			private function dealDataHandler( result:ByteArray ):void
			{
				var arr:Array;
				result.position += 4;
				var code:int = result.readInt();
				var count:int =  result.readInt();
				arr = (Decompress.getInstance()).getFBdata( code , count , result);
				
				arr.shift();
				--count;
				
				for(var i:int=0 ; i<count ; ++i)
				{
					arr[i]["lastClosePrice"] = lastClosePrice.toFixed(2);
				}
				
				_maipan = new ArrayList( arr );
				
				validateNow();
				layout.verticalScrollPosition = layout.getVerticalScrollPositionDelta(NavigationUnit.END);
			}
			
		]]>
	</fx:Script>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		.up{color:red;}
		.down{color:#50FF50}
		.eq{color:#FFFFFF}
		.button_down{
			chromeColor:#0A0A0A;
			color:white;
		}
		.button{
			chromeColor:#0A0A0A;
			color:red;
		}
	</fx:Style>
	<s:Group left="0" right="0" top="0" width="100%" height="100%">
		<s:layout>
			<s:HorizontalLayout gap="0"/>
		</s:layout>
		<s:BorderContainer width="100%" height="100%" borderColor="#FF0000"
						   mouseMove="module1_mouseMoveHandler(event)"
						   mouseOut="candlestickchart_mouseOutHandler(event)"
						   mouseOver="module1_mouseMoveHandler(event)">
			<s:layout>
				<s:VerticalLayout gap="0"/>
			</s:layout>
			<s:Group width="100%" height="22" >
				<s:layout>
					<s:HorizontalLayout/>
				</s:layout>
				<s:Label width="500" color="white" paddingLeft="50" paddingTop="4"
						 text=" 时间： { DT.format( new Date(xDate.Time ) ) }           价格：  {xDate.Price.toFixed(2)}           均价： { xDate.AvgPrice.toFixed(2) }" />
				
			</s:Group>
			<mx:LineChart id="linechart" left="0" right="0" width="100%" height="80%" color="#FFFEFE" gutterLeft="50" gutterRight="50"
						  dataProvider="{_myData}" paddingTop="0" seriesFilters="[]"
						  showDataTips="false" >
				<mx:backgroundElements>
					<mx:GridLines gridDirection="both" horizontalTickAligned="true"
								  verticalTickAligned="true">
						<mx:verticalStroke>
							<mx:SolidColorStroke alpha=".3" color="red" weight=".5"/>
						</mx:verticalStroke>
						<mx:horizontalStroke>
							<mx:SolidColorStroke alpha="0.8" color="red" weight="1"/>
						</mx:horizontalStroke>
					</mx:GridLines>
					<mx:HRule y="0" width="2" shadowColor="0xff0000" strokeColor="0xff0000"/>
				</mx:backgroundElements>
				
				<mx:horizontalAxis>
					<mx:DateTimeAxis id="main_x" dataUnits="minutes" displayLocalTime="true"
									 disabledRanges="{[{rangeStart: this.startDate , rangeEnd: this.endDate } ]}"
									 interval="30" labelUnits="minutes"
									 maximum="{ this.maxDate }"
									 minimum="{this.minDate}"
									 />
				</mx:horizontalAxis>
				
				<mx:verticalAxis>
					<mx:LinearAxis id="main_y" alignLabelsToInterval="false" baseAtZero="false" maximumLabelPrecision="2" />
				</mx:verticalAxis>
				
				<mx:verticalAxisRenderers>
					<mx:AxisRenderer axis="{main_y}" highlightElements="false"  placement="left" tickLength="0" tickPlacement="none" minorTickLength="0" minorTickPlacement="none">
						<mx:labelRenderer>
							<fx:Component>
								<mx:HBox>
									<fx:Style>
										@namespace s "library://ns.adobe.com/flex/spark";
										@namespace mx "library://ns.adobe.com/flex/mx";
										.up{color:red;}
										.down{color:#50FF50}
										.eq{color:#FFFFFF}
									</fx:Style>
									<fx:Script>
										<![CDATA[
											import mx.utils.ObjectProxy;
											
											[Bindable]
											private var text:ObjectProxy = new ObjectProxy();
											override public function set data(value:Object):void{
												text.lastClosePrice = this.parentDocument.lastClosePrice;
												text.text = value.text;
											}
										]]>
									</fx:Script>
									<comp:mylabel text="{text.text}" measureValue="{text.lastClosePrice.toFixed(2)}"/>
								</mx:HBox>
							</fx:Component>
						</mx:labelRenderer>
						<mx:axisStroke>
							<mx:SolidColorStroke color="red" weight="1"/>
						</mx:axisStroke>
					</mx:AxisRenderer>
					<!-- 副坐标 显示涨跌百分比 -->
					<mx:AxisRenderer axis="{main_y2}" placement="right" tickLength="0" tickPlacement="none" minorTickLength="0" minorTickPlacement="none" >
						<mx:labelRenderer>
							<fx:Component>
								<mx:HBox>
									<fx:Script>
										<![CDATA[
											
											override public function set data(value:Object):void{
												super.data = value;
											}
										]]>
									</fx:Script>
									<comp:mylabel text="{data.text}%"/>
								</mx:HBox>
							</fx:Component>
						</mx:labelRenderer>
						<mx:axisStroke>
							<mx:SolidColorStroke color="red" weight="1"/>
						</mx:axisStroke>
					</mx:AxisRenderer>
				</mx:verticalAxisRenderers>
				
				<mx:horizontalAxisRenderers>
					<mx:AxisRenderer axis="{main_x}" tickLength="0" tickPlacement="none" minorTickLength="0" minorTickPlacement="none">
						<mx:axisStroke>
							<mx:SolidColorStroke color="red" weight="1"/>
						</mx:axisStroke>
					</mx:AxisRenderer>
				</mx:horizontalAxisRenderers>
				
				<mx:series>
					<comp:myLinechart id="main_line" xField="Time" yField="Price" />
					
					<mx:LineSeries displayName="平均" xField="Time" yField="AvgPrice">
						<mx:lineStroke>
							<mx:SolidColorStroke color="yellow" weight="1"/>
						</mx:lineStroke>
					</mx:LineSeries>
					
					<!-- 副坐标 显示涨跌百分比 -->
					<mx:LineSeries visible="false" yField="Percent">
						<mx:verticalAxis>
							<mx:LinearAxis id="main_y2" alignLabelsToInterval="false" baseAtZero="false" maximumLabelPrecision="2" />
						</mx:verticalAxis>
					</mx:LineSeries>
					
				</mx:series>	
			</mx:LineChart>
			<!-- 成交量 -->
			<s:Group width="100%" height="12" >
				<s:layout>
					<s:HorizontalLayout/>
				</s:layout>
				<mx:Label id="vol" color="white" paddingLeft="50" text="成交量: {xDate.Vol}"/>
			</s:Group>
			<mx:ColumnChart width="100%" height="20%" color="#FFFFFF" 
							dataProvider="{_myData}" gutterLeft="50" paddingRight="50"
							seriesFilters="[]" showDataTips="false" textAlign="right">
				
				<mx:backgroundElements>
					<mx:GridLines gridDirection="horizontal" horizontalTickAligned="true"
								  verticalTickAligned="true">
						<mx:horizontalStroke>
							<mx:SolidColorStroke alpha="0.15" color="#e9e9e9" weight="1"/>
						</mx:horizontalStroke>
					</mx:GridLines>
				</mx:backgroundElements>
				
				<mx:horizontalAxis>
					<mx:DateTimeAxis id="haxis2" dataUnits="minutes"
									 disabledRanges="{[{rangeStart: this.startDate , rangeEnd: this.endDate } ]}"
									 interval="30" labelUnits="minutes"
									 maximum="{ this.maxDate }"
									 minimum="{this.minDate}"
									 />
				</mx:horizontalAxis>

				<mx:horizontalAxisRenderers>
					<mx:AxisRenderer axis="{haxis2}" axisStroke="{xy}"  canDropLabels="true" showLabels="false" />
				</mx:horizontalAxisRenderers>
				
				<mx:verticalAxis>
					<mx:LinearAxis id="linear" baseAtZero="true" labelFunction="moneyformat"/>  
				</mx:verticalAxis>
				
				<mx:verticalAxisRenderers>
					<mx:AxisRenderer axis="{linear}" axisStroke="{xy}"  placement="left" tickLength="0" tickPlacement="none" minorTickLength="0" minorTickPlacement="none" />
				</mx:verticalAxisRenderers>

				<mx:series>
					<mx:ColumnSeries displayName="成交量" xField="Time" yField="Vol"/>
				</mx:series>
			</mx:ColumnChart>
			

			<mx:ViewStack id="myViewStack" visible="false" width="100%" height="380" borderVisible="false" includeInLayout="false">
				
				<!-- KDJ -->
				<s:NavigatorContent width="100%" height="100%" backgroundColor="#0A0A0A">
					<s:Group width="100%" height="12" >
						<s:layout>
							<s:HorizontalLayout gap="10"/>
						</s:layout>
						<s:Label color="#FFFFFF" fontSize="14" paddingLeft="80" text="KDJ"/>
						<s:Label color="#FFFFFF" fontSize="14" text="K：{_normTips.K.toFixed(2)}"/>
						<s:Label color="#FFFF00" fontSize="14" text="D：{_normTips.D.toFixed(2)}"/>
						<s:Label color="#FF00FF" fontSize="14" text="J：{_normTips.J.toFixed(2)}"/>
					</s:Group>
					<mx:LineChart right="0" width="100%" height="100%" color="#FFFFFF"
								  dataProvider="{this._normData}"  gutterLeft="50" paddingRight="50"
								  paddingTop="0" seriesFilters="[]" showDataTips="false">
						
						<mx:backgroundElements>
							<mx:GridLines gridDirection="horizontal" horizontalTickAligned="true"
										  verticalTickAligned="true">
								<mx:horizontalStroke>
									<mx:SolidColorStroke alpha="0.15" color="#e9e9e9" weight="1"/>
								</mx:horizontalStroke>
							</mx:GridLines>
						</mx:backgroundElements>
						
						<mx:horizontalAxis>
							<mx:DateTimeAxis id="kdj_x" dataUnits="minutes"
											 disabledRanges="{[{rangeStart: this.startDate , rangeEnd: this.endDate } ]}"
											 interval="30" labelUnits="minutes"
											 maximum="{ this.maxDate }"
											 minimum="{this.minDate}"
											 />
						</mx:horizontalAxis>
						
						<mx:verticalAxis>
							<mx:LinearAxis id="kdj_y" baseAtZero="false" />
						</mx:verticalAxis>
						
						<mx:horizontalAxisRenderers>
							<mx:AxisRenderer axis="{kdj_x}" axisStroke="{xy}"  showLabels="false" tickLength="0" tickPlacement="none" minorTickLength="0" minorTickPlacement="none" />
						</mx:horizontalAxisRenderers>
						
						<mx:verticalAxisRenderers>
							<mx:AxisRenderer axis="{kdj_y}" axisStroke="{xy}"  labelGap="0"  placement="left" tickLength="0" tickPlacement="none" minorTickLength="0" minorTickPlacement="none" />
						</mx:verticalAxisRenderers>
						
						<mx:series>
							<mx:LineSeries form="curve" lineStroke="{line_ma5}" xField="Time"
										   yField="K"/>
							<mx:LineSeries form="curve" lineStroke="{line_ma10}" xField="Time"
										   yField="D"/>
							<mx:LineSeries form="curve" lineStroke="{line_ma20}" xField="Time"
										   yField="J"/>
						</mx:series>
					</mx:LineChart>
				</s:NavigatorContent>
				
				<!-- MACD -->
				<s:NavigatorContent width="100%" height="100%" backgroundColor="#0A0A0A">
					<s:layout>
						<s:VerticalLayout/>
					</s:layout>
					<s:Group width="100%" height="12" >
						<s:layout>
							<s:HorizontalLayout gap="10" paddingBottom="2" paddingTop="2"/>
						</s:layout>
						<s:Label color="white" paddingLeft="80" text="MACD "/>
						<s:Label color="#FFFF00" fontSize="14" text="DIFF：{_normTips.DIFF.toFixed(3)}"/>
						<s:Label color="#FFFFFF" fontSize="14" text="DEA：{_normTips.DEA.toFixed(3)}"/>
						<s:Label color="green" fontSize="14" text="MACD：{_normTips.MACD.toFixed(3)}"/>
					</s:Group>
					
					<mx:ColumnChart right="0" width="100%" height="100%" color="#FFFFFF"
									dataProvider="{this._normData}" gutterLeft="50" paddingRight="50"
									seriesFilters="[]">
						
						<mx:backgroundElements>
							<mx:GridLines gridDirection="horizontal" horizontalTickAligned="true"
										  verticalTickAligned="true">
								<mx:horizontalStroke>
									<mx:SolidColorStroke alpha="0.15" color="#e9e9e9" weight="1"/>
								</mx:horizontalStroke>
							</mx:GridLines>
						</mx:backgroundElements>
						
						<mx:horizontalAxis>
							<mx:DateTimeAxis id="haxis4" dataUnits="minutes"
											 disabledRanges="{[{rangeStart: this.startDate , rangeEnd: this.endDate } ]}"
											 interval="30" labelUnits="minutes"
											 maximum="{ this.maxDate }"
											 minimum="{this.minDate}"
											 />
						</mx:horizontalAxis>
						
						<mx:verticalAxis>
							<mx:LinearAxis id="linear3" baseAtZero="true" />  
						</mx:verticalAxis>
						
						<mx:verticalAxisRenderers>  
							<mx:AxisRenderer axis="{linear3}"  axisStroke="{xy}"  labelGap="0"  placement="left" tickLength="0" tickPlacement="none" minorTickLength="0" minorTickPlacement="none" />
						</mx:verticalAxisRenderers>
						
						<mx:horizontalAxisRenderers>
							<mx:AxisRenderer axis="{haxis4}"  axisStroke="{xy}"  showLabels="false" tickLength="0" tickPlacement="none" minorTickLength="0" minorTickPlacement="none" />
						</mx:horizontalAxisRenderers>
						
						<mx:series>
							<mx:ColumnSeries fillFunction="fillfunction" xField="Time" yField="MACD"/>
							<mx:LineSeries form="curve" lineStroke="{line_ma10}" xField="Time" yField="DIFF"/>
							<mx:LineSeries form="curve" lineStroke="{line_ma5}" xField="Time" yField="DEA"/>
						</mx:series>
					</mx:ColumnChart>
				</s:NavigatorContent>
				
				<!-- RSI -->
				<s:NavigatorContent width="100%" height="100%" backgroundColor="#0A0A0A">
					<s:Group width="100%" height="12" >
						<s:layout>
							<s:HorizontalLayout gap="10" paddingBottom="2" paddingTop="2"/>
						</s:layout>
						<s:Label color="white" paddingLeft="80" text="RSI "/>
						<s:Label color="#FFFFFF" fontSize="14" text="RSI1：{_normTips.RSI1.toFixed(2)}"/>
						<s:Label color="#FFFF00" fontSize="14" text="RSI2：{_normTips.RSI2.toFixed(2)}"/>
						<s:Label color="#FF00FF" fontSize="14" text="RSI3：{_normTips.RSI3.toFixed(2)}"/>
					</s:Group>
					<mx:LineChart right="0" width="100%" height="100%" color="#FFFFFF"
								  dataProvider="{this._normData}"  gutterLeft="50" paddingRight="50"
								  paddingTop="0" seriesFilters="[]" showDataTips="false">
						
						<mx:backgroundElements>
							<mx:GridLines gridDirection="horizontal" horizontalTickAligned="true"
										  verticalTickAligned="true">
								<mx:horizontalStroke>
									<mx:SolidColorStroke alpha="0.15" color="#e9e9e9" weight="1"/>
								</mx:horizontalStroke>
							</mx:GridLines>
						</mx:backgroundElements>
						
						<mx:horizontalAxis>
							<mx:DateTimeAxis id="RSI_x" dataUnits="minutes"
											 disabledRanges="{[{rangeStart: this.startDate , rangeEnd: this.endDate } ]}"
											 interval="30" labelUnits="minutes"
											 maximum="{ this.maxDate }"
											 minimum="{this.minDate}"
											 />
						</mx:horizontalAxis>
						
						<mx:verticalAxis>
							<mx:LinearAxis id="RSI_y" baseAtZero="false" />
						</mx:verticalAxis>
						
						<mx:horizontalAxisRenderers>
							<mx:AxisRenderer axis="{RSI_x}" axisStroke="{xy}" showLabels="false" tickLength="0" tickPlacement="none" minorTickLength="0" minorTickPlacement="none" />
						</mx:horizontalAxisRenderers>
						
						<mx:verticalAxisRenderers>
							<mx:AxisRenderer axis="{RSI_y}" axisStroke="{xy}"  labelGap="0"  placement="left" tickLength="0" tickPlacement="none" minorTickLength="0" minorTickPlacement="none" />
						</mx:verticalAxisRenderers>
						
						<mx:series>
							<mx:LineSeries form="curve" lineStroke="{line_ma5}" xField="Time"   yField="RSI1"/>
							<mx:LineSeries form="curve" lineStroke="{line_ma10}" xField="Time"   yField="RSI2"/>
							<mx:LineSeries form="curve" lineStroke="{line_ma20}" xField="Time"   yField="RSI3"/>
						</mx:series>
					</mx:LineChart>
				</s:NavigatorContent>
				
				<!-- 量比 -->
				<s:NavigatorContent width="100%" height="100%" backgroundColor="#0A0A0A">
					<s:Group width="100%" height="12" >
						<s:layout>
							<s:HorizontalLayout gap="10" paddingBottom="2" paddingTop="2"/>
						</s:layout>
						<s:Label color="white" paddingLeft="80" text="量比 "/>
						<s:Label color="#FFFFFF" fontSize="14" text="{_normTips.LB.toFixed(2)}"/>
					</s:Group>
					<mx:LineChart right="0" width="100%" height="100%" color="#FFFFFF" paddingRight="50"
								  dataProvider="{this._normData}" paddingTop="0"  gutterLeft="50"
								  seriesFilters="[]" showDataTips="false">
						
						<mx:backgroundElements>
							<mx:GridLines gridDirection="horizontal" horizontalTickAligned="true"  verticalTickAligned="true">
								<mx:horizontalStroke>
									<mx:SolidColorStroke alpha="0.15" color="#e9e9e9" weight="1"/>
								</mx:horizontalStroke>
							</mx:GridLines>
						</mx:backgroundElements>
						
						<mx:horizontalAxis>
							<mx:DateTimeAxis id="lb_x" dataUnits="minutes"
											 disabledRanges="{[{rangeStart: this.startDate , rangeEnd: this.endDate } ]}"
											 interval="30" labelUnits="minutes"
											 maximum="{ this.maxDate }"
											 minimum="{this.minDate}"
											 />
						</mx:horizontalAxis>
						
						<mx:horizontalAxisRenderers>
							<mx:AxisRenderer axis="{lb_x}"  axisStroke="{xy}"  showLabels="false" tickLength="0" tickPlacement="none" minorTickLength="0" minorTickPlacement="none" />
						</mx:horizontalAxisRenderers>
						
						<mx:verticalAxis>
							<mx:LinearAxis id="lb_y" baseAtZero="false" />
						</mx:verticalAxis>
						
						<mx:verticalAxisRenderers>
							<mx:AxisRenderer axis="{lb_y}" axisStroke="{xy}"  labelGap="0"  placement="left" tickLength="0" tickPlacement="none" minorTickLength="0" minorTickPlacement="none" />
						</mx:verticalAxisRenderers>
						
						<mx:series>
							<mx:LineSeries form="curve" xField="Time" yField="LB">
								<mx:lineStroke>
									<mx:SolidColorStroke color="white" weight="2"/>
								</mx:lineStroke>
							</mx:LineSeries>
						</mx:series>
					</mx:LineChart>
				</s:NavigatorContent>
				
				<!-- 至尊数据 -->
				<s:NavigatorContent width="100%" height="100%" 	backgroundColor="#0A0A0A" >
					<s:layout>
						<s:VerticalLayout gap="0"/>
					</s:layout>
					<!-- 主力统计 -->
					<s:Group id="ZLTJContain" width="100%" height="100%" doubleClickEnabled="true" doubleClick="{toggle([GFTJContain , SHTJContain ]);}">
	
						<s:Group width="100%" height="12" >
							<s:layout>
								<s:HorizontalLayout gap="10" paddingBottom="2" paddingTop="2"/>
							</s:layout>
							<s:Label paddingLeft="80" color="white"  text="主力统计 "/>
							<s:Label color="red" paddingLeft="10" text="{ _normTips.ZLTJ.toFixed(2)} 万"/>
							<s:Label id="ZLTJ_tips" color="#555555" paddingLeft="50" text="" fontSize="18" alpha="0.5"/>

						</s:Group>
						<mx:LineChart width="100%" height="100%" color="#FF0000" dataProvider="{this._normData}" gutterLeft="50" paddingRight="50" updateComplete="check_ZZSJ(event)">
							
							<mx:backgroundElements>
								<mx:GridLines gridDirection="horizontal"
											  verticalTickAligned="true">
									<mx:horizontalStroke>
										<mx:SolidColorStroke alpha="0.15" color="#e9e9e9" weight="1"/>
									</mx:horizontalStroke>
								</mx:GridLines>
							</mx:backgroundElements>
							
							<mx:horizontalAxis>
								<mx:DateTimeAxis id="ZLTJ_x" dataUnits="minutes"
												 disabledRanges="{[{rangeStart: this.startDate , rangeEnd: this.endDate } ]}"
												 interval="30" labelUnits="minutes"
												 maximum="{ this.maxDate }"
												 minimum="{this.minDate}"
												 />
							</mx:horizontalAxis>
							
							<mx:verticalAxis>
								<mx:LinearAxis id="ZLTJ_y" labelFunction="moneyformat2" baseAtZero="false"/>  
							</mx:verticalAxis>
							
							<mx:horizontalAxisRenderers>
								<mx:AxisRenderer axis="{ZLTJ_x}" showLabels="false" showLine="false" tickLength="0" tickPlacement="none"/>
							</mx:horizontalAxisRenderers>
							
							<mx:verticalAxisRenderers>  
								<mx:AxisRenderer axis="{ZLTJ_y}"  axisStroke="{xy}"   placement="left" tickLength="0" tickPlacement="none" minorTickLength="0" minorTickPlacement="none" />
							</mx:verticalAxisRenderers>
							
							<mx:series>
								<mx:LineSeries lineStroke="{s2}"  xField="Time"   yField="ZLTJ"/>
							</mx:series>
						</mx:LineChart>
						
					</s:Group>
					<s:Label backgroundColor="red" text="---------------------------------------------------------" height="1" width="100%" />
					
					<!-- 跟风统计 -->
					<s:Group id="GFTJContain" width="100%" height="100%" doubleClickEnabled="true" doubleClick="{toggle([ZLTJContain , SHTJContain ]);}">

						<s:Group width="100%" height="12" >
							<s:layout>
								<s:HorizontalLayout gap="10" paddingBottom="2" paddingTop="2"/>
							</s:layout>
							<s:Label paddingLeft="80" color="white"  text="跟风统计 "/>
							<s:Label color="red" paddingLeft="10" text="{ _normTips.GFTJ.toFixed(2)} 万"/>
							<s:Label id="GFTJ_tips" color="#555555" paddingLeft="50" text="" fontSize="18" alpha="0.5"/>
						</s:Group>
						<mx:LineChart  width="100%" height="100%" color="#FF0000" dataProvider="{this._normData}" gutterLeft="50" paddingRight="50">
							
							<mx:backgroundElements>
								<mx:GridLines gridDirection="horizontal"
											  verticalTickAligned="true">
									<mx:horizontalStroke>
										<mx:SolidColorStroke alpha="0.15" color="#e9e9e9" weight="1"/>
									</mx:horizontalStroke>
								</mx:GridLines>
							</mx:backgroundElements>
							
							<mx:horizontalAxis>
								<mx:DateTimeAxis id="GFTJ_x" dataUnits="minutes"
												 disabledRanges="{[{rangeStart: this.startDate , rangeEnd: this.endDate } ]}"
												 interval="30" labelUnits="minutes"
												 maximum="{ this.maxDate }"
												 minimum="{this.minDate}"
												 />
							</mx:horizontalAxis>
							
							<mx:verticalAxis>
								<mx:LinearAxis id="GFTJ_y" labelFunction="moneyformat2" baseAtZero="false" />  
							</mx:verticalAxis>
							
							<mx:horizontalAxisRenderers>
								<mx:AxisRenderer axis="{GFTJ_x}" showLabels="false" showLine="false" tickLength="0" tickPlacement="none"/>
							</mx:horizontalAxisRenderers>
							
							<mx:verticalAxisRenderers>  
								<mx:AxisRenderer axis="{GFTJ_y}"  axisStroke="{xy}"  placement="left" tickLength="0" tickPlacement="none" minorTickLength="0" minorTickPlacement="none" />
							</mx:verticalAxisRenderers>
							
							<mx:series>
								<mx:LineSeries lineStroke="{s1}"  xField="Time"  yField="GFTJ"/>
							</mx:series>
						</mx:LineChart>

					</s:Group>
					<s:Label backgroundColor="red" text="---------------------------------------------------------" height="1" width="100%" />
					
					<!-- 散户统计 -->
					<s:Group id="SHTJContain" width="100%" height="100%" doubleClickEnabled="true" doubleClick="{toggle([GFTJContain , ZLTJContain ]);}">

						<s:Group width="100%" height="12">
							<s:layout>
								<s:HorizontalLayout gap="10" paddingBottom="2" paddingTop="2"/>
							</s:layout>
							<s:Label paddingLeft="80" color="white" text="散户统计 "/>
							<s:Label color="red" paddingLeft="10" text="{ _normTips.SHTJ.toFixed(2)} 万"/>
							<s:Label id="SHTJ_tips" color="#555555" paddingLeft="50" text="" fontSize="18" alpha="0.5"/>
						</s:Group>
						<mx:LineChart width="100%" height="100%" color="#FF0000" dataProvider="{this._normData}" gutterLeft="50" paddingRight="50">
							
							<mx:backgroundElements>
								<mx:GridLines gridDirection="horizontal"
											  verticalTickAligned="true">
									<mx:horizontalStroke>
										<mx:SolidColorStroke alpha="0.15" color="#e9e9e9" weight="1" />
									</mx:horizontalStroke>
								</mx:GridLines>
							</mx:backgroundElements>
							
							<mx:horizontalAxis>
								<mx:DateTimeAxis id="SHTJ_x" dataUnits="minutes"
												 disabledRanges="{[{rangeStart: this.startDate , rangeEnd: this.endDate } ]}"
												 interval="30" labelUnits="minutes"
												 maximum="{ this.maxDate }"
												 minimum="{this.minDate}"
												 />
							</mx:horizontalAxis>
							
							<mx:verticalAxis>
								<mx:LinearAxis id="SHTJ_y" labelFunction="moneyformat2" baseAtZero="false" />  
							</mx:verticalAxis>
							
							<mx:horizontalAxisRenderers>
								<mx:AxisRenderer axis="{SHTJ_x}" showLabels="false" showLine="false" tickLength="0" tickPlacement="none"/>
							</mx:horizontalAxisRenderers>
							
							<mx:verticalAxisRenderers>  
								<mx:AxisRenderer axis="{SHTJ_y}" axisStroke="{xy}" placement="left" tickLength="0" tickPlacement="none" minorTickLength="0" minorTickPlacement="none" />
							</mx:verticalAxisRenderers>
							
							<mx:series>
								<mx:LineSeries lineStroke="{s3}" xField="Time"  yField="SHTJ"/>
							</mx:series>
						</mx:LineChart>
						
					</s:Group>
					
				</s:NavigatorContent>
				
			</mx:ViewStack>

			<s:Spacer height="8" />
			<s:Label backgroundColor="red" text="---------------------------------------------------------" height="1" width="100%" />
			<s:Group width="100%" mouseOver="{ this.removeElement(g); this.removeElement(xTips); this.removeElement(yTips); }"
							   mouseOut="{ this.addElement(g); this.addElement(xTips); this.addElement(yTips);}" >
				<!--				
				<s:ButtonBar x="50" y="0" change="changeHandler(event)" fontSize="14" useHandCursor="true" buttonMode="true" >
					<s:layout>
						<s:HorizontalLayout gap="-1" columnWidth="80" variableColumnWidth="false" />
					</s:layout>
					<s:dataProvider>
						<s:ArrayList source="[KDJ , MACD , RSI , 量比 , 至尊数据 , 更多]" />
					</s:dataProvider>
				</s:ButtonBar>
	
				<s:ButtonBar x="50" change="changeHandler(event)" fontSize="14" verticalCenter="0">
					<s:layout>
						<s:HorizontalLayout gap="-1" columnWidth="80" variableColumnWidth="false" />
					</s:layout>
					<s:dataProvider>
						<s:ArrayList source="[KDJ , MACD , RSI , 量比 , 至尊数据 , 更多]" />
					</s:dataProvider>
				</s:ButtonBar>
				-->	
				<s:Group chromeColor="#0A0A0A" color="red" fontSize="14" fontWeight="bold" >
					<s:layout>
						<s:HorizontalLayout gap="-1" columnWidth="80" variableColumnWidth="false" />
					</s:layout>
					<s:Button label="KDJ" click="changeHandler(event,0)" />
					<s:Button label="MACD" click="changeHandler(event,1)"/>
					<s:Button label="RSI" click="changeHandler(event,2)"/>
					<s:Button label="量比" click="changeHandler(event,3)" />
					<s:Button label="至尊数据" click="changeHandler(event,4)" />
					<s:Button label="更多" click="changeHandler(event,5)" />
				</s:Group>
			
			</s:Group>
		</s:BorderContainer>
		<s:BorderContainer width="250" height="100%" borderColor="#FF0000">
			<s:layout>
				<s:VerticalLayout gap="0"/>
			</s:layout>
			<!-- 买卖实时信息 -->
			<!-- 买卖实时信息 -->
			<s:Label width="250" color="yellow" fontSize="20" paddingBottom="4"
					 paddingLeft="50" paddingTop="10" text="{_tran_info.stockName}"/>
			
			<s:Label width="250" height="1" backgroundColor="#FF0000" text=" "/>
			
			
			<s:Group width="250" height="24" >
				<s:layout>
					<s:HorizontalLayout paddingBottom="4" paddingLeft="10" paddingTop="4"/>
				</s:layout>
				<s:Label width="30" color="white" fontSize="15" paddingBottom="2" paddingTop="2" textAlign="left"
						 text="委比"/>
				<comp:mylabel width="75" fontSize="14" paddingBottom="2" paddingTop="4" textAlign="center"
							  text="{_tran_info.wb.toFixed(2)}%" measureValue="0"/>
				<s:Label width="40" color="white" fontSize="15" paddingBottom="2" paddingLeft="10"
						 paddingTop="2" text="委差" textAlign="right"/>
				<comp:mylabel width="75" fontSize="14" paddingBottom="2" paddingTop="4" textAlign="center" paddingRight="4"
							  text="{_tran_info.wc.toFixed(0)}" measureValue="0"/>
			</s:Group>
			<s:Label width="250" height="1" backgroundColor="#FF0000" text=" "/>
			
			<!-- 卖5盘 -->
			<s:Group  width="250" height="20">
				<s:layout>
					<s:HorizontalLayout/>
				</s:layout>
				<s:Label minWidth="70" color="white" fontSize="15" paddingBottom="2" paddingLeft="50"
						 paddingTop="2" text="⑤"/>
				<comp:mylabel width="70" fontSize="14" paddingBottom="2"  textAlign="right"
							  paddingTop="4" text="{_tran_info.sell5.toFixed(2)}" measureValue="{_tran_info.lastClosePrice}"/>
				<s:Label width="90" color="yellow" fontSize="15" paddingBottom="2"
						 paddingRight="0" paddingTop="2" text="{_tran_info.sellVol5.toString()}"
						 textAlign="right"/>
			</s:Group>
			<s:Group  width="250" height="20" >
				<s:layout>
					<s:HorizontalLayout/>
				</s:layout>
				<s:Label minWidth="70" color="white" fontSize="15" paddingBottom="2" paddingLeft="50"
						 paddingTop="2" text="④"/>
				<comp:mylabel width="70" fontSize="14" paddingBottom="2"  textAlign="right"
							  paddingTop="4" text="{_tran_info.sell4.toFixed(2)}" measureValue="{_tran_info.lastClosePrice}"/>
				<s:Label width="90" color="yellow" fontSize="15" paddingBottom="2"
						 paddingRight="0" paddingTop="2" text="{_tran_info.sellVol4.toString()}"
						 textAlign="right"/>
			</s:Group>
			<s:Group  width="250" height="20" >
				<s:layout>
					<s:HorizontalLayout/>
				</s:layout>
				<s:Label minWidth="70" color="white" fontSize="15" paddingBottom="2" paddingLeft="50"
						 paddingTop="2" text="③"/>
				<comp:mylabel width="70" fontSize="14" paddingBottom="2" textAlign="right"
							  paddingTop="4" text="{_tran_info.sell3.toFixed(2)}" measureValue="{_tran_info.lastClosePrice}"/>
				<s:Label width="90" color="yellow" fontSize="15" paddingBottom="2"
						 paddingRight="0" paddingTop="2" text="{_tran_info.sellVol3.toString()}"
						 textAlign="right"/>
			</s:Group>
			<s:Group  width="250" height="20">
				<s:layout>
					<s:HorizontalLayout/>
				</s:layout>
				<s:Label minWidth="70" color="white" fontSize="15" paddingBottom="2" paddingLeft="50"
						 paddingTop="2" text="②"/>
				<comp:mylabel width="70" fontSize="14" paddingBottom="2" textAlign="right"
							  paddingTop="4" text="{_tran_info.sell2.toFixed(2)}" measureValue="{_tran_info.lastClosePrice}"/>
				<s:Label width="90" color="yellow" fontSize="15" paddingBottom="2"
						 paddingRight="0" paddingTop="2" text="{_tran_info.sellVol2.toString()}"
						 textAlign="right"/>
			</s:Group>
			<s:Group  width="250" height="20" >
				<s:layout>
					<s:HorizontalLayout/>
				</s:layout>
				<s:Label minWidth="70" color="white" fontSize="15" paddingBottom="2" paddingLeft="16"
						 paddingTop="2" text="卖盘 ①"/>
				<comp:mylabel width="70" fontSize="14" paddingBottom="2" textAlign="right"
							  paddingTop="4" text="{_tran_info.sell1.toFixed(2)}" measureValue="{_tran_info.lastClosePrice}"/>
				<s:Label width="90"  color="yellow" fontSize="15" paddingBottom="2"
						 paddingRight="0" paddingTop="2" text="{_tran_info.sellVol1.toString()}"
						 textAlign="right"/>
			</s:Group>
			<s:Label  width="250" height="1" backgroundColor="#FF0000" text=" "/>
			
			<!-- 买5盘 -->
			<s:Group  width="250" height="20" >
				<s:layout>
					<s:HorizontalLayout/>
				</s:layout>
				<s:Label minWidth="70" color="white" fontSize="15" paddingBottom="2" paddingLeft="16"
						 paddingTop="2" text="买盘 ①"/>
				<comp:mylabel width="70" fontSize="14" paddingBottom="2"  textAlign="right"
							  paddingTop="4" text="{_tran_info.buy1.toFixed(2)}" measureValue="{_tran_info.lastClosePrice}"/>
				<s:Label width="90" color="yellow" fontSize="15" paddingBottom="2"
						 paddingRight="0" paddingTop="2" text="{_tran_info.buyVol1.toString()}"
						 textAlign="right"/>
			</s:Group>
			<s:Group  width="250" height="20" >
				<s:layout>
					<s:HorizontalLayout/>
				</s:layout>
				<s:Label minWidth="70" color="white" fontSize="15" paddingBottom="2" paddingLeft="50"
						 paddingTop="2" text="②"/>
				<comp:mylabel width="70" fontSize="14" paddingBottom="2" textAlign="right"
							  paddingTop="4" text="{_tran_info.buy2.toFixed(2)}" measureValue="{_tran_info.lastClosePrice}"/>
				<s:Label width="90" color="yellow" fontSize="15" paddingBottom="2"
						 paddingRight="0" paddingTop="2" text="{_tran_info.buyVol2.toString()}"
						 textAlign="right"/>
			</s:Group>
			<s:Group  width="250" height="20" >
				<s:layout>
					<s:HorizontalLayout/>
				</s:layout>
				<s:Label minWidth="70" color="white" fontSize="15" paddingBottom="2" paddingLeft="50"
						 paddingTop="2" text="③"/>
				<comp:mylabel width="70" fontSize="14" paddingBottom="2"  textAlign="right"
							  paddingTop="4" text="{_tran_info.buy3.toFixed(2)}" measureValue="{_tran_info.lastClosePrice}"/>
				<s:Label width="90" color="yellow" fontSize="15" paddingBottom="2"
						 paddingRight="0" paddingTop="2" text="{_tran_info.buyVol3.toString()}"
						 textAlign="right"/>
			</s:Group>
			<s:Group  width="250" height="20" >
				<s:layout>
					<s:HorizontalLayout/>
				</s:layout>
				<s:Label minWidth="70" color="white" fontSize="15" paddingBottom="2" paddingLeft="50"
						 paddingTop="2" text="④"/>
				<comp:mylabel width="70" fontSize="14" paddingBottom="2"  textAlign="right"
							  paddingTop="4" text="{_tran_info.buy4.toFixed(2)}" measureValue="{_tran_info.lastClosePrice}"/>
				<s:Label width="90" color="yellow" fontSize="15" paddingBottom="2"
						 paddingRight="0" paddingTop="2" text="{_tran_info.buyVol4.toString()}"
						 textAlign="right"/>
			</s:Group>
			<s:Group  width="250" height="20" >
				<s:layout>
					<s:HorizontalLayout/>
				</s:layout>
				<s:Label minWidth="70" color="white" fontSize="15" paddingBottom="2" paddingLeft="50"
						 paddingTop="2" text="⑤"/>
				<comp:mylabel width="70" fontSize="14" paddingBottom="2"  textAlign="right"
							  paddingTop="4" text="{_tran_info.buy5.toFixed(2)}" measureValue="{_tran_info.lastClosePrice}"/>
				<s:Label width="90" color="yellow" fontSize="15" paddingBottom="2"
						 paddingRight="0" paddingTop="2" text="{_tran_info.buyVol5.toString()}"
						 textAlign="right"/>
			</s:Group>
			<s:Label width="250" height="1" backgroundColor="#FF0000" text=" "/>
			
			
			<!-- 实时数据 -->
			<s:Group width="250" height="24" >
				<s:layout>
					<s:HorizontalLayout paddingBottom="4" paddingLeft="10" paddingTop="4"/>
				</s:layout>
				<s:Label color="white" fontSize="15" paddingBottom="2" paddingTop="2" text="现价"/>
				<comp:mylabel width="80" fontSize="14" paddingBottom="2" paddingRight="4"
							  paddingTop="4" text="{_tran_info.nowPrice.toFixed(2)}" measureValue="{_tran_info.lastClosePrice}" textAlign="right"/>
				<s:Label color="white" fontSize="15" paddingBottom="2" paddingTop="2" text="今开"/>
				<comp:mylabel width="80" fontSize="14" paddingBottom="2" paddingRight="4"
							  paddingTop="4" text="{_tran_info.todayOpen.toFixed(2)}" measureValue="{_tran_info.lastClosePrice}" textAlign="right"/>
			</s:Group>
			<s:Group width="250" height="24" >
				<s:layout>
					<s:HorizontalLayout paddingBottom="4" paddingLeft="10" paddingTop="4"/>
				</s:layout>
				<s:Label color="white" fontSize="15" paddingBottom="2" paddingTop="2" text="涨跌"/>
				<comp:mylabel width="80" fontSize="14" paddingBottom="2" paddingRight="4"
							  paddingTop="4" text="{_tran_info.upDown.toFixed(2)}" measureValue="0" textAlign="right"/>
				<s:Label color="white" fontSize="15" paddingBottom="2" paddingTop="2" text="最高"/>
				<comp:mylabel width="80" fontSize="14" paddingBottom="2" paddingRight="4"
							  paddingTop="4" text="{_tran_info.highest.toFixed(2)}" measureValue="{_tran_info.lastClosePrice}" textAlign="right"/>
			</s:Group>
			<s:Group width="250" height="24" >
				<s:layout>
					<s:HorizontalLayout paddingBottom="4" paddingLeft="10" paddingTop="4"/>
				</s:layout>
				<s:Label color="white" fontSize="15" paddingBottom="2" paddingTop="2" text="涨幅"/>
				<comp:mylabel width="80" fontSize="14" paddingBottom="2" paddingRight="4"
							  paddingTop="4" text="{_tran_info.upDownPercent.toFixed(2)}%" measureValue="0" textAlign="right"/>
				<s:Label color="white" fontSize="15" paddingBottom="2" paddingTop="2" text="最低"/>
				<comp:mylabel width="80" fontSize="14" paddingBottom="2" paddingRight="4"
							  paddingTop="4" text="{_tran_info.lowest.toFixed(2)}" measureValue="{_tran_info.lastClosePrice}" textAlign="right"/>
			</s:Group>
			<s:Group width="250" height="24" >
				<s:layout>
					<s:HorizontalLayout paddingBottom="4" paddingLeft="10" paddingTop="4"/>
				</s:layout>
				<s:Label color="white" fontSize="15" paddingBottom="2" paddingTop="2" text="总量"/>
				<s:Label width="80" color="yellow" fontSize="14" paddingBottom="2" textAlign="right"
						 paddingTop="4" text="{_tran_info.vol.toFixed(0)}"/>
				<s:Label color="white" fontSize="15" paddingBottom="2" paddingTop="2" text="量比"/>
				<comp:mylabel width="80" fontSize="14" paddingBottom="2" paddingRight="4"
							  paddingTop="4" text="{_tran_info.lb.toFixed(2)}" measureValue="1" textAlign="right"/>
			</s:Group>
			<s:Group width="250" height="24" >
				<s:layout>
					<s:HorizontalLayout paddingBottom="4" paddingLeft="10" paddingTop="4"/>
				</s:layout>
				<s:Label color="white" fontSize="15" paddingBottom="2" paddingTop="2" text="外盘"/>
				<s:Label width="80" color="red" fontSize="14" paddingBottom="2" paddingTop="4" textAlign="right"
						 text="{_tran_info.wp.toFixed(0)}"/>
				<s:Label color="white" fontSize="15" paddingBottom="2" paddingTop="2" text="内盘"/>
				<s:Label width="80" color="#50FF50" fontSize="14" paddingBottom="2"
						 paddingRight="4" paddingTop="4" text="{_tran_info.np.toFixed(0)}" textAlign="right"/>
			</s:Group>
			

			<s:Label width="250" height="1" backgroundColor="#FF0000" text=" "/>
			
			<!-- 交易明细 -->
			<s:List  width="250" height="100%"	borderVisible="false" contentBackgroundColor="#0A0A0A" dataProvider="{_maipan}" 	itemRenderer="renderer.buy_info_format" />
			
		</s:BorderContainer>
	</s:Group>
</s:NavigatorContent>
